basePath: /
definitions:
  domain.Cliente:
    properties:
      cpf:
        type: string
      created_at:
        type: string
      data_aniversario:
        type: string
      email:
        type: string
      id:
        type: string
      nome:
        type: string
      telefone:
        type: string
      updated_at:
        type: string
    required:
    - cpf
    - nome
    type: object
  domain.Produto:
    properties:
      categoria:
        type: string
      created_at:
        type: string
      descricao:
        type: string
      id:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:3000
info:
  contact: {}
  description: This is a documentation of all endpoints in the API.
  title: Tech Challenge API
  version: 3.0.0
paths:
  /cliente:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Cliente'
      summary: cadastra um novo cliente
      tags:
      - Cliente
  /clientes/{cpf}:
    get:
      consumes:
      - '*/*'
      parameters:
      - description: cpf do cliente
        in: path
        name: cpf
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Cliente'
      summary: pega um cliente por cpf
      tags:
      - Cliente
  /liveness:
    get:
      consumes:
      - '*/*'
      description: get the status of http.
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            type: string
      summary: Show the status of http.
      tags:
      - Health
  /produto:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Produto'
      summary: cadastra um novo produto
      tags:
      - Produto
  /produto/{id}:
    delete:
      parameters:
      - description: id do produto
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: apaga produto por id
      tags:
      - Produto
  /produtos/{categoria}:
    get:
      parameters:
      - description: categoria do produto
        in: path
        name: categoria
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Produto'
            type: array
      summary: pega produtos por categoria
      tags:
      - Produto
  /readiness:
    get:
      consumes:
      - '*/*'
      description: get the status of http.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Show the status of http.
      tags:
      - Health
produces:
- application/json
schemes:
- http
securityDefinitions:
  JWT:
    in: header
    name: token
    type: apiKey
swagger: "2.0"
